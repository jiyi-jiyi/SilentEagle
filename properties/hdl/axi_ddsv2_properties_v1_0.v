
`timescale 1 ns / 1 ps

	module axi_ddsv2_properties_v1_0 #
	(
		// Users to add parameters here

		// User parameters ends
		// Do not modify the parameters beyond this line


		// Parameters of Axi Slave Bus Interface S00_AXI
		parameter integer C_S00_AXI_DATA_WIDTH	= 32,
		parameter integer C_S00_AXI_ADDR_WIDTH	= 10
	)
	(
		// Users to add ports here

        output [31:0] dac_0_0_0_f,
        output [31:0] dac_0_0_0_p,
        output [31:0] dac_0_0_1_f,
        output [31:0] dac_0_0_1_p,
        output [31:0] dac_0_0_2_f,
        output [31:0] dac_0_0_2_p,
        output [31:0] dac_0_0_3_f,
        output [31:0] dac_0_0_3_p,
        output [31:0] dac_0_1_0_f,
        output [31:0] dac_0_1_0_p,
        output [31:0] dac_0_1_1_f,
        output [31:0] dac_0_1_1_p,
        output [31:0] dac_0_1_2_f,
        output [31:0] dac_0_1_2_p,
        output [31:0] dac_0_1_3_f,
        output [31:0] dac_0_1_3_p,
        output [31:0] dac_0_2_0_f,
        output [31:0] dac_0_2_0_p,
        output [31:0] dac_0_2_1_f,
        output [31:0] dac_0_2_1_p,
        output [31:0] dac_0_2_2_f,
        output [31:0] dac_0_2_2_p,
        output [31:0] dac_0_2_3_f,
        output [31:0] dac_0_2_3_p,
        output [31:0] dac_0_3_0_f,
        output [31:0] dac_0_3_0_p,
        output [31:0] dac_0_3_1_f,
        output [31:0] dac_0_3_1_p,
        output [31:0] dac_0_3_2_f,
        output [31:0] dac_0_3_2_p,
        output [31:0] dac_0_3_3_f,
        output [31:0] dac_0_3_3_p,
        output [31:0] dac_1_0_0_f,
        output [31:0] dac_1_0_0_p,
        output [31:0] dac_1_0_1_f,
        output [31:0] dac_1_0_1_p,
        output [31:0] dac_1_0_2_f,
        output [31:0] dac_1_0_2_p,
        output [31:0] dac_1_0_3_f,
        output [31:0] dac_1_0_3_p,
        output [31:0] dac_1_1_0_f,
        output [31:0] dac_1_1_0_p,
        output [31:0] dac_1_1_1_f,
        output [31:0] dac_1_1_1_p,
        output [31:0] dac_1_1_2_f,
        output [31:0] dac_1_1_2_p,
        output [31:0] dac_1_1_3_f,
        output [31:0] dac_1_1_3_p,
        output [31:0] dac_1_2_0_f,
        output [31:0] dac_1_2_0_p,
        output [31:0] dac_1_2_1_f,
        output [31:0] dac_1_2_1_p,
        output [31:0] dac_1_2_2_f,
        output [31:0] dac_1_2_2_p,
        output [31:0] dac_1_2_3_f,
        output [31:0] dac_1_2_3_p,
        output [31:0] dac_1_3_0_f,
        output [31:0] dac_1_3_0_p,
        output [31:0] dac_1_3_1_f,
        output [31:0] dac_1_3_1_p,
        output [31:0] dac_1_3_2_f,
        output [31:0] dac_1_3_2_p,
        output [31:0] dac_1_3_3_f,
        output [31:0] dac_1_3_3_p,
        output [31:0] dac_2_0_0_f,
        output [31:0] dac_2_0_0_p,
        output [31:0] dac_2_0_1_f,
        output [31:0] dac_2_0_1_p,
        output [31:0] dac_2_0_2_f,
        output [31:0] dac_2_0_2_p,
        output [31:0] dac_2_0_3_f,
        output [31:0] dac_2_0_3_p,
        output [31:0] dac_2_1_0_f,
        output [31:0] dac_2_1_0_p,
        output [31:0] dac_2_1_1_f,
        output [31:0] dac_2_1_1_p,
        output [31:0] dac_2_1_2_f,
        output [31:0] dac_2_1_2_p,
        output [31:0] dac_2_1_3_f,
        output [31:0] dac_2_1_3_p,
        output [31:0] dac_2_2_0_f,
        output [31:0] dac_2_2_0_p,
        output [31:0] dac_2_2_1_f,
        output [31:0] dac_2_2_1_p,
        output [31:0] dac_2_2_2_f,
        output [31:0] dac_2_2_2_p,
        output [31:0] dac_2_2_3_f,
        output [31:0] dac_2_2_3_p,
        output [31:0] dac_2_3_0_f,
        output [31:0] dac_2_3_0_p,
        output [31:0] dac_2_3_1_f,
        output [31:0] dac_2_3_1_p,
        output [31:0] dac_2_3_2_f,
        output [31:0] dac_2_3_2_p,
        output [31:0] dac_2_3_3_f,
        output [31:0] dac_2_3_3_p,
        output [31:0] dac_3_0_0_f,
        output [31:0] dac_3_0_0_p,
        output [31:0] dac_3_0_1_f,
        output [31:0] dac_3_0_1_p,
        output [31:0] dac_3_0_2_f,
        output [31:0] dac_3_0_2_p,
        output [31:0] dac_3_0_3_f,
        output [31:0] dac_3_0_3_p,
        output [31:0] dac_3_1_0_f,
        output [31:0] dac_3_1_0_p,
        output [31:0] dac_3_1_1_f,
        output [31:0] dac_3_1_1_p,
        output [31:0] dac_3_1_2_f,
        output [31:0] dac_3_1_2_p,
        output [31:0] dac_3_1_3_f,
        output [31:0] dac_3_1_3_p,
        output [31:0] dac_3_2_0_f,
        output [31:0] dac_3_2_0_p,
        output [31:0] dac_3_2_1_f,
        output [31:0] dac_3_2_1_p,
        output [31:0] dac_3_2_2_f,
        output [31:0] dac_3_2_2_p,
        output [31:0] dac_3_2_3_f,
        output [31:0] dac_3_2_3_p,
        output [31:0] dac_3_3_0_f,
        output [31:0] dac_3_3_0_p,
        output [31:0] dac_3_3_1_f,
        output [31:0] dac_3_3_1_p,
        output [31:0] dac_3_3_2_f,
        output [31:0] dac_3_3_2_p,
        output [31:0] dac_3_3_3_f,
        output [31:0] dac_3_3_3_p,
        
        output [31:0] dac_0_0_a,
        output [31:0] dac_0_1_a,
        output [31:0] dac_0_2_a,
        output [31:0] dac_0_3_a,
        output [31:0] dac_1_0_a,
        output [31:0] dac_1_1_a,
        output [31:0] dac_1_2_a,
        output [31:0] dac_1_3_a,
        output [31:0] dac_2_0_a,
        output [31:0] dac_2_1_a,
        output [31:0] dac_2_2_a,
        output [31:0] dac_2_3_a,
        output [31:0] dac_3_0_a,
        output [31:0] dac_3_1_a,
        output [31:0] dac_3_2_a,
        output [31:0] dac_3_3_a,
        
		// User ports ends
		// Do not modify the ports beyond this line


		// Ports of Axi Slave Bus Interface S00_AXI
		input wire  s00_axi_aclk,
		input wire  s00_axi_aresetn,
		input wire [C_S00_AXI_ADDR_WIDTH-1 : 0] s00_axi_awaddr,
		input wire [2 : 0] s00_axi_awprot,
		input wire  s00_axi_awvalid,
		output wire  s00_axi_awready,
		input wire [C_S00_AXI_DATA_WIDTH-1 : 0] s00_axi_wdata,
		input wire [(C_S00_AXI_DATA_WIDTH/8)-1 : 0] s00_axi_wstrb,
		input wire  s00_axi_wvalid,
		output wire  s00_axi_wready,
		output wire [1 : 0] s00_axi_bresp,
		output wire  s00_axi_bvalid,
		input wire  s00_axi_bready,
		input wire [C_S00_AXI_ADDR_WIDTH-1 : 0] s00_axi_araddr,
		input wire [2 : 0] s00_axi_arprot,
		input wire  s00_axi_arvalid,
		output wire  s00_axi_arready,
		output wire [C_S00_AXI_DATA_WIDTH-1 : 0] s00_axi_rdata,
		output wire [1 : 0] s00_axi_rresp,
		output wire  s00_axi_rvalid,
		input wire  s00_axi_rready
	);
// Instantiation of Axi Bus Interface S00_AXI
	axi_ddsv2_properties_v1_0_S00_AXI # ( 
		.C_S_AXI_DATA_WIDTH(C_S00_AXI_DATA_WIDTH),
		.C_S_AXI_ADDR_WIDTH(C_S00_AXI_ADDR_WIDTH)
	) axi_ddsv2_properties_v1_0_S00_AXI_inst (
		.S_AXI_ACLK(s00_axi_aclk),
		.S_AXI_ARESETN(s00_axi_aresetn),
		.S_AXI_AWADDR(s00_axi_awaddr),
		.S_AXI_AWPROT(s00_axi_awprot),
		.S_AXI_AWVALID(s00_axi_awvalid),
		.S_AXI_AWREADY(s00_axi_awready),
		.S_AXI_WDATA(s00_axi_wdata),
		.S_AXI_WSTRB(s00_axi_wstrb),
		.S_AXI_WVALID(s00_axi_wvalid),
		.S_AXI_WREADY(s00_axi_wready),
		.S_AXI_BRESP(s00_axi_bresp),
		.S_AXI_BVALID(s00_axi_bvalid),
		.S_AXI_BREADY(s00_axi_bready),
		.S_AXI_ARADDR(s00_axi_araddr),
		.S_AXI_ARPROT(s00_axi_arprot),
		.S_AXI_ARVALID(s00_axi_arvalid),
		.S_AXI_ARREADY(s00_axi_arready),
		.S_AXI_RDATA(s00_axi_rdata),
		.S_AXI_RRESP(s00_axi_rresp),
		.S_AXI_RVALID(s00_axi_rvalid),
		.S_AXI_RREADY(s00_axi_rready),
		.slv_reg0(dac_0_0_0_f),
        .slv_reg1(dac_0_0_0_p),
        .slv_reg2(dac_0_0_1_f),
        .slv_reg3(dac_0_0_1_p),
        .slv_reg4(dac_0_0_2_f),
        .slv_reg5(dac_0_0_2_p),
        .slv_reg6(dac_0_0_3_f),
        .slv_reg7(dac_0_0_3_p),
        .slv_reg8(dac_0_1_0_f),
        .slv_reg9(dac_0_1_0_p),
        .slv_reg10(dac_0_1_1_f),
        .slv_reg11(dac_0_1_1_p),
        .slv_reg12(dac_0_1_2_f),
        .slv_reg13(dac_0_1_2_p),
        .slv_reg14(dac_0_1_3_f),
        .slv_reg15(dac_0_1_3_p),
        .slv_reg16(dac_0_2_0_f),
        .slv_reg17(dac_0_2_0_p),
        .slv_reg18(dac_0_2_1_f),
        .slv_reg19(dac_0_2_1_p),
        .slv_reg20(dac_0_2_2_f),
        .slv_reg21(dac_0_2_2_p),
        .slv_reg22(dac_0_2_3_f),
        .slv_reg23(dac_0_2_3_p),
        .slv_reg24(dac_0_3_0_f),
        .slv_reg25(dac_0_3_0_p),
        .slv_reg26(dac_0_3_1_f),
        .slv_reg27(dac_0_3_1_p),
        .slv_reg28(dac_0_3_2_f),
        .slv_reg29(dac_0_3_2_p),
        .slv_reg30(dac_0_3_3_f),
        .slv_reg31(dac_0_3_3_p),
        .slv_reg32(dac_1_0_0_f),
        .slv_reg33(dac_1_0_0_p),
        .slv_reg34(dac_1_0_1_f),
        .slv_reg35(dac_1_0_1_p),
        .slv_reg36(dac_1_0_2_f),
        .slv_reg37(dac_1_0_2_p),
        .slv_reg38(dac_1_0_3_f),
        .slv_reg39(dac_1_0_3_p),
        .slv_reg40(dac_1_1_0_f),
        .slv_reg41(dac_1_1_0_p),
        .slv_reg42(dac_1_1_1_f),
        .slv_reg43(dac_1_1_1_p),
        .slv_reg44(dac_1_1_2_f),
        .slv_reg45(dac_1_1_2_p),
        .slv_reg46(dac_1_1_3_f),
        .slv_reg47(dac_1_1_3_p),
        .slv_reg48(dac_1_2_0_f),
        .slv_reg49(dac_1_2_0_p),
        .slv_reg50(dac_1_2_1_f),
        .slv_reg51(dac_1_2_1_p),
        .slv_reg52(dac_1_2_2_f),
        .slv_reg53(dac_1_2_2_p),
        .slv_reg54(dac_1_2_3_f),
        .slv_reg55(dac_1_2_3_p),
        .slv_reg56(dac_1_3_0_f),
        .slv_reg57(dac_1_3_0_p),
        .slv_reg58(dac_1_3_1_f),
        .slv_reg59(dac_1_3_1_p),
        .slv_reg60(dac_1_3_2_f),
        .slv_reg61(dac_1_3_2_p),
        .slv_reg62(dac_1_3_3_f),
        .slv_reg63(dac_1_3_3_p),
        .slv_reg64(dac_2_0_0_f),
        .slv_reg65(dac_2_0_0_p),
        .slv_reg66(dac_2_0_1_f),
        .slv_reg67(dac_2_0_1_p),
        .slv_reg68(dac_2_0_2_f),
        .slv_reg69(dac_2_0_2_p),
        .slv_reg70(dac_2_0_3_f),
        .slv_reg71(dac_2_0_3_p),
        .slv_reg72(dac_2_1_0_f),
        .slv_reg73(dac_2_1_0_p),
        .slv_reg74(dac_2_1_1_f),
        .slv_reg75(dac_2_1_1_p),
        .slv_reg76(dac_2_1_2_f),
        .slv_reg77(dac_2_1_2_p),
        .slv_reg78(dac_2_1_3_f),
        .slv_reg79(dac_2_1_3_p),
        .slv_reg80(dac_2_2_0_f),
        .slv_reg81(dac_2_2_0_p),
        .slv_reg82(dac_2_2_1_f),
        .slv_reg83(dac_2_2_1_p),
        .slv_reg84(dac_2_2_2_f),
        .slv_reg85(dac_2_2_2_p),
        .slv_reg86(dac_2_2_3_f),
        .slv_reg87(dac_2_2_3_p),
        .slv_reg88(dac_2_3_0_f),
        .slv_reg89(dac_2_3_0_p),
        .slv_reg90(dac_2_3_1_f),
        .slv_reg91(dac_2_3_1_p),
        .slv_reg92(dac_2_3_2_f),
        .slv_reg93(dac_2_3_2_p),
        .slv_reg94(dac_2_3_3_f),
        .slv_reg95(dac_2_3_3_p),
        .slv_reg96(dac_3_0_0_f),
        .slv_reg97(dac_3_0_0_p),
        .slv_reg98(dac_3_0_1_f),
        .slv_reg99(dac_3_0_1_p),
        .slv_reg100(dac_3_0_2_f),
        .slv_reg101(dac_3_0_2_p),
        .slv_reg102(dac_3_0_3_f),
        .slv_reg103(dac_3_0_3_p),
        .slv_reg104(dac_3_1_0_f),
        .slv_reg105(dac_3_1_0_p),
        .slv_reg106(dac_3_1_1_f),
        .slv_reg107(dac_3_1_1_p),
        .slv_reg108(dac_3_1_2_f),
        .slv_reg109(dac_3_1_2_p),
        .slv_reg110(dac_3_1_3_f),
        .slv_reg111(dac_3_1_3_p),
        .slv_reg112(dac_3_2_0_f),
        .slv_reg113(dac_3_2_0_p),
        .slv_reg114(dac_3_2_1_f),
        .slv_reg115(dac_3_2_1_p),
        .slv_reg116(dac_3_2_2_f),
        .slv_reg117(dac_3_2_2_p),
        .slv_reg118(dac_3_2_3_f),
        .slv_reg119(dac_3_2_3_p),
        .slv_reg120(dac_3_3_0_f),
        .slv_reg121(dac_3_3_0_p),
        .slv_reg122(dac_3_3_1_f),
        .slv_reg123(dac_3_3_1_p),
        .slv_reg124(dac_3_3_2_f),
        .slv_reg125(dac_3_3_2_p),
        .slv_reg126(dac_3_3_3_f),
        .slv_reg127(dac_3_3_3_p),
        .slv_reg128(dac_0_0_a),
        .slv_reg129(dac_0_1_a),
        .slv_reg130(dac_0_2_a),
        .slv_reg131(dac_0_3_a),
        .slv_reg132(dac_1_0_a),
        .slv_reg133(dac_1_1_a),
        .slv_reg134(dac_1_2_a),
        .slv_reg135(dac_1_3_a),
        .slv_reg136(dac_2_0_a),
        .slv_reg137(dac_2_1_a),
        .slv_reg138(dac_2_2_a),
        .slv_reg139(dac_2_3_a),
        .slv_reg140(dac_3_0_a),
        .slv_reg141(dac_3_1_a),
        .slv_reg142(dac_3_2_a),
        .slv_reg143(dac_3_3_a)
	);

	// Add user logic here

	// User logic ends

	endmodule
